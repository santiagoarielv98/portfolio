import type { Locale } from "@/config/i18n-config";
import { i18n } from "@/config/i18n-config";
import type { Metadata } from "next";
import "./globals.css";
import { Space_Grotesk, Urbanist } from "next/font/google";
import { ParallaxProviderWrapper } from "../_providers/parallax-provider";

const spaceGrotesk = Space_Grotesk({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-space",
});

const urbanist = Urbanist({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-urbanist",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

export default async function RootLayout(
  props: Readonly<{
    children: React.ReactNode;
    params: Promise<{ lang: Locale }>;
  }>,
) {
  const params = await props.params;
  const { children } = props;

  return (
    <html
      lang={params.lang}
      className={`${spaceGrotesk.variable} ${urbanist.variable} scroll-smooth`}
    >
      <body className="min-h-screen overflow-x-hidden bg-background font-sans text-foreground antialiased">
        <ParallaxProviderWrapper>{children}</ParallaxProviderWrapper>
      </body>
    </html>
  );
}
